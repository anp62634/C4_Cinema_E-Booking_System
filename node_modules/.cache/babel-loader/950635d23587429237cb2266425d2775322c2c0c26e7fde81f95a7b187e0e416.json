{"ast":null,"code":"var _jsxFileName = \"/Users/aliciapitts/Desktop/C4_Cinema_E-Booking_System/src/MovieInfo.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport TrailerModal from \"./TrailerModal\";\nimport NavBar from \"./Components/NavBar\";\nimport { Movies } from \"./MovieSamples\";\nimport Footer from \"./Components/Footer\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieInfo() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n  const [cast, setCast] = useState('');\n  const [director, setDirector] = useState('');\n  const [producer, setProducer] = useState('');\n  const [synopsis, setSynopsis] = useState('');\n  const [poster, setPoster] = useState('');\n  const [trailer, setTrailer] = useState('');\n  const [checked, setChecked] = useState(false);\n  const [isShowing, setIsShowing] = useState(0);\n  const [runtime, setRuntime] = useState(0.0);\n  const [mpa, setMPA] = useState('');\n  const [movies, setMovies] = useState([]);\n  const movie = {\n    title,\n    mpa,\n    genre,\n    cast,\n    director,\n    producer,\n    synopsis,\n    poster,\n    trailer,\n    isShowing\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:8080/movie/getAll\").then(res => res.json()).then(result => {\n      setMovies(result);\n    });\n  }, []);\n  const movieTitle = useParams().movieTitle;\n  const loadMovies = Movies.filter(movie => movie.title === movieTitle);\n\n  // Category String to Display to Interface\n  /*var movieCat = \"\";\n  var catLength = loadMovies.map((movie, index) => movie.category.length);\n  for (let i = 0; i < catLength; i++) {\n      movieCat += loadMovies.map((movie, index) => movie.category[i])\n      if (i !== catLength-1) {\n          movieCat += \", \";\n      }\n  }*/\n\n  //Display for movies being shown\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), loadMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info-row\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: movie.synopsis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieInfo, \"65BU3ri+Z4qyMbwGrOCkLIDWXaI=\", false, function () {\n  return [useParams];\n});\n_c = MovieInfo;\n;\nvar _c;\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"names":["React","useParams","Link","TrailerModal","NavBar","Movies","Footer","MovieInfo","title","setTitle","useState","genre","setGenre","cast","setCast","director","setDirector","producer","setProducer","synopsis","setSynopsis","poster","setPoster","trailer","setTrailer","checked","setChecked","isShowing","setIsShowing","runtime","setRuntime","mpa","setMPA","movies","setMovies","movie","useEffect","fetch","then","res","json","result","movieTitle","loadMovies","filter","map","id"],"sources":["/Users/aliciapitts/Desktop/C4_Cinema_E-Booking_System/src/MovieInfo.js"],"sourcesContent":["import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport TrailerModal from \"./TrailerModal\";\nimport NavBar from \"./Components/NavBar\";\nimport { Movies } from \"./MovieSamples\";\nimport Footer from \"./Components/Footer\";\nimport \"./style.css\";\n\nexport default function MovieInfo() {\n\n\n    const[title, setTitle]=useState('');\n    const[genre, setGenre]=useState('');\n    const[cast, setCast]=useState('');\n    const[director, setDirector]=useState('');\n    const[producer, setProducer]=useState('');\n    const[synopsis, setSynopsis]=useState('');\n    const[poster, setPoster]=useState('');\n    const[trailer, setTrailer]=useState('');\n    const[checked, setChecked]=useState(false);\n    const[isShowing, setIsShowing]=useState(0);\n    const[runtime, setRuntime]=useState(0.0);\n    const[mpa, setMPA]=useState('');\n    const[movies,setMovies]=useState([]);\n    const movie = {title, mpa, genre, cast, director, producer, synopsis, poster, trailer, isShowing}\n\n  useEffect(()=>{\n      fetch(\"http://localhost:8080/movie/getAll\")\n      .then(res=>res.json())\n      .then((result)=>{\n          setMovies(result);\n      })\n  },[])\n\n    const movieTitle = useParams().movieTitle;\n    const loadMovies = Movies.filter(movie => movie.title === movieTitle);\n\n    // Category String to Display to Interface\n    /*var movieCat = \"\";\n    var catLength = loadMovies.map((movie, index) => movie.category.length);\n    for (let i = 0; i < catLength; i++) {\n        movieCat += loadMovies.map((movie, index) => movie.category[i])\n        if (i !== catLength-1) {\n            movieCat += \", \";\n        }\n    }*/\n\n    //Display for movies being shown\n    return (\n    <React.Fragment>\n        <NavBar/>\n        {loadMovies.map(movie => (\n            <div key={movie.id} className=\"movie-info\">\n                {/* Movie Poster */}\n                <div className=\"movie-info-row\">\n                    <img src={movie.poster} alt={movie.title}/>\n                </div>\n                            \n                <div className=\"movie-info-row\">\n                    {/* Movie Name, Rating */}\n                    <div className=\"movie-info-text\">\n                        <h1>{movie.title}</h1>\n                        {/*<p><b>Rated {movie.rating}</b></p>*/}\n                        {/*<p><b>Category: {movieCat}</b></p>*/}\n                        <p><i>{movie.synopsis}</i></p>\n                    </div>\n                </div>\n            </div>\n        ))}\n        <Footer/>\n    </React.Fragment>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}